MURK
—————

5С08 -? присваивается в начале 0
5C36, 5C37 -? = присваивается в начале #9C82
5C8D,5C8F - ?

9C3E - начало игры, очистка экрана
9С52 - заносим в HL слов KERNALO и обращаемся к Tr-DOS 
( см. http://zxpress.ru/book_articles.php?id=621 )

LD C,#13  Копирование 16 байт из области ОЗУ, указанной регистром 'HL' в ОЗУ по 
          адресу 23773 (#5CDD) - системная область ТР-дос

LD C,#0A      ; поиск заданного файла

LD C,#08     ЧТЕНИЕ ИНФОРМАЦИИ О ФАЙЛЕ ПО ЕГО НОМЕРУ.
           В регистре 'А' должен быть номер интересующего Вас файла - (число от 
           0 до 127).

LD C,#05    ЧТЕНИЕ ГРУППЫ СЕКТОРОВ С ДИСКА
            Мощная функция считывания информации с диска в ОЗУ, не требующая 
            для своей работы буфера перекачки, (буфером является та область,
            куда и считывается информация.
            В регистр 'В' помещается количество СЕКТОРОВ, считываемых подряд с 
            диска (или проще - количество 256 байтных блоков).
            В регистр 'HL' начальный адрес ОЗУ, куда будут считаны данные.
            В регистр 'D' номер ДОРОЖКИ.
            В регистр 'Е' номер СЕКТОРА в ДОРОЖКЕ, с которого будет начинаться 
            считывание.
            Регистр 'А' должен быть равным 0.
        !   Если регистр 'В' будет равен 0, то считывания в ОЗУ не произойдет.

В итоге загружаем керналь по адресу #C169

идем далее
9С76 - randomize 


#A0D5 - обработка хода персонажа
IX<(C171)

$A0E6 - опрос клавиатуры
0 - A206
9 - A1A6
8 - A1D6
7 - A12B
6 - A17E

Enter - AE3D
L - B4C8
Space - A259
>A71D
>A39D

#A153 - новый ход?
на входе IX - указатель на новую ячейку карты куда сдвинулся персонаж
A<(C171+7) <— на чем стоял персонаж
(C173)<A
A<(IX)
(C173)<IX
(C171+7)<A
A<(C175)
(C173)< A

#A1AC
HL<(C173)
BC<64
HL-BC
>A207

#A1C0 - передвижение персонажа вверх
#A1D6 - передвижение персонажа вниз
#A1F0 -

#A438 -?  

#A522 -- подпрограмма вывода или печати
сохраняет из BC в #A5B3

использует подпрограму #0E9E ( 3742 ) -
Вход: В A - номер строки
Выход:в  HL адреса строки экрана

#A55F:
На входе DE - указатель на атрибут
берем BC<(A5B5)
определяем адрес атрибутов
и закрашиваем 4 знакоместа
атрибутом на который указывает DE

#A580 - отрисовка спрайта

#A5A0 - DE+1
>A55F

#A5A5 HL = A * 34

A5B3,A5B4 -?
A5B5,A5B6 -?

#A5B7 - рисует рамку (?)
HL<18
BC<1707

#A5EE - рисует линию рамки (?)
A<7
(5c8d)<A
(5c8f)<A

A6A7+1 < L
A6A7+2 < H
A6A7+3 < B+80

A6A7+5 < L
A6A7+6 < H

A6A7+7 < C
A6A7+9 < L+C

A6A7+A < H
A6A7+B < B+80
A6A7+D < L

A6A7+E < H+B

A6A7+F < C

A6A7+11 < L
A6A7+12 < H

A6A7+15 < L+C

A6A7+16 < H
A6A7+19 < L

A6A7+1A < H+B

A6A7+1D < L+C
A6A7+1E < H+B

C < A6A7+1 = L
B < A6A7+2 = H
A < A6A7+3 = B+80

#A66A

#A676: печать символа в строке (?)
на входе A - что печатать
BC - где печатать
HL < #A6C8 + A * 8

A6A7 -?

A6C8 - шрифт?


A71D - отрисовка карты ?
(C16C)<0
(C16B)<0
HL<(C169)

A741: CD 80 A5

AE3B,AE3C - счетчики случайных чисел?

C169, C16A - позиция отображаемого куска карты
C16B, C16C - отрисовываемый кусок карты ?
C16D, -?
C16E, -? позиция по Y персонажа
C171, C172 -?
C173, C174 -прежняя позиция персонажа
C175 -?
C17C, C18C -?

homo << анализ
#C3A0 - убит=1
#C3A1 - стойкость
#C3a2 - сила
#C3a3 - броня
#C3a4 - разум
5-левая рука
6-правая рука
7 - что на земле ?
#C3A8 - кол-во ходов
9
10
11
12
13
14
15

робот:
#C3b0 - убит=1
#C3b1 - стойкость
#C3b2 - сила
#C3b3 - броня
#C3b4 - разум
5-левая рука
6-правая рука
7 - что на земле ? - D5
#C3b8 - кол-во ходов

предметы:
58 - шар


———————

MURK 2

#9995



78А0 - ?

7A3E - ?

7781 - ?

7885:

78F0 -
HL <- C298, C299
умножаем HL на 2, прибавляем к H и L по 1
BC <- HL
CALL #7917
DE = #C81D
HL = HL + #C81D
DE<->HL
CALL #7885
A <- (#C2A9)
A = 1 ? переход на 7910
A = 0
CALL #78C2
RET


78C2: BC <- (#7927, #7928) - экранные координаты какие-то 
AND #18  SRA A  SRA A  SRA A  ADD A,#58 - определяем адрес атрибутов в BC по координатам знакоместа
IX <- BC


7917: процедура умножения A на 34
  HL <- A*34

#7927, #7928 -?

7E52 - wait press 0….

#7F94 - продажа из ячейки в ТДО

#8012 - обнуление ячейки предмета
#8074 - отрисовка ТДО

9F39 - ?

A05B - ?

A02F: двигаем курсор на карте в "боевом" режиме:
  если в #C29D хранится 0 - возврат
  иначе уменьшаем значение на 1

A03A: двигаем курсор на карте в "боевом" режиме:
  если в #C29D хранится 10 - возврат
  иначе увеличиваем значение на 1
A045, A050 - аналогичные процедуры

C230 -?

C296 - ?
C298 - ?
C299 - ?

C29E -?

C29С, C29D - позиция курсора на карте в "боевом" режиме

C2A8 - номер предмета в меню ТДО

C2A4 - предмет ?

C2A9 - ?

С2D1 - массив предметов !97767889800


С4СD - блок данных главного героя
С4СE - стойкость
С4СF - сила ?
С4D0 - броня ?
С4D1 - разум ?
С4D2 - правый карман?
С4D3 - левый карман ?
С4D4
С4D5 - текущее кол-во ходов
С4D6
С4D7
С4D8
С4D9 - максимальное количество ходов

С81D -?
